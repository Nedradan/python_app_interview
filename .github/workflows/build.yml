name: Build Docker Image on PR

on:
  pull_request:
    types: [opened, synchronize, reopened, closed ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build image
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

    - name: Set up AWS OIDC credentials
      if: github.event.action == 'closed'
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.CICD_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: Log in to Amazon ECR
      if: github.event.action == 'closed'
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
    
    - name: Tag and push image to Amazon ECR
      if: github.event.action == 'closed'
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
